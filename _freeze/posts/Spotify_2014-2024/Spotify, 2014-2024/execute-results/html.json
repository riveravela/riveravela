{
  "hash": "c66de95b4aced0cd7b4344931dbc3c49",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Visualizando mi historial de streaming en Spotify\"\nsubtitle: \"Una mirada a mis patrones de escucha con datos reales.\"\nauthor: \"Luis Manuel Rivera Vela\"\ndate: \"2025-05-26\"\ncategories: [Spotify, DataViz, Code, R]\nimage: \"Spotify.png\"\nformat:\n     html:\n          toc: TRUE\n          fig-width: 16\n          fig-height: 10\n          fig-cap-location: top\n          number-sections: false\n          code-fold: true\n---\n\n\n\n\n\n## Introducción\n\nEn cada momento del día, semana, mes y año, millones de reproducciones se realizan a través de las distintas plataformas digitales como Apple Music, Deezer, Pandora, Youtube, SoundCloud, Google Play Music, Amazon Music y Spotify. Sin embargo, a pesar de las múltiples plataformas que existen, la plataforma que lidera el mercado de audio en streaming sigue siendo Spotify.\n\nEn esta entrada de blog, que retomo después de poco más de 2 años, visualizaremos distinta información que podemos pedir a través de la página de Spotify y que requiere de ciertos días para su recolección y envío hacia el correo electrónico registrado en la cuenta de Spotify.\n\nEn lo personal, requerí a Spotify la base de datos donde se esboza el historial de reproducción extendido de toda la vida útil de la cuenta. Cabe recordar que para tener disponible esta información, se requiere de un tiempo de espera de $\\approx$ 30 días.\n\nPara solicitar esta información, hay que dirigirse al apartado de **Privacidad de la Cuenta** una vez que se haya iniciado sesión en la página de Spotify y seguir a la sección **Descarga tus datos** para poder pedir la información.\n\n## Paquetería\n\nEstos serán los paquetes que se utilizarán a lo largo de este trabajo.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#    Paquetes requeridos.\npacman::p_load(jsonlite, lubridate, tidyverse, knitr, ggplot2, plotly, purrr, tidytext)\n#    Quitar notación científica.\noptions(scipen = 999)\n#    Limpiar ambiente.\nrm(list = ls())\n```\n:::\n\n\n\n## Importando y editando datos\n\nEn mi caso, el historial extendido consta de 7 diferentes archivos que desconozco cuál es la manera en que se basan para integrar qué información en cada archivo. En esta base de datos se puede visualizar información básica con relación al momento exacto en que finalizó la reproducción, nombre del artista o creador (en caso de ser podcast), título de la canción o podcast, capítulo del podcast, álbum del artista y los milisegundos que se reprodujo la canción o podcast.\n\nDe manera general, la información utilizada para este ejercicio comprende del 28 de abril de 2014 al 6 de noviembre de 2024.\n\n\n\n\n\n\n\nPara importar la información, generé un vector con cada dirección de ruta de los archivos (no se mostró por privacidad), y se importaron de la siguiente forma:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Leer todos los archivos y unirlos\nhistorial_spotify <- rutas |>\n     map(fromJSON) |>\n     bind_rows()\n```\n:::\n\n\n\nUna vez importada la información en su forma agregada se realizaron algunos ajustes para el objetivo de esta entrada de blog: se le dio formato de fecha, se añadió una variable con los minutos reproducidos y se creó una variable con fecha (sin hora). De esta forma, el análisis se vuelve menos complejo y se puede visualizar la actividad por año, mes, semana o día.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#    Convertir la columna 'ts' a clase POSIXct (fecha-hora legible)\nhistorial_spotify <- historial_spotify |>  \n     mutate(ts = ymd_hms(ts, tz = \"UTC\"))\n#    Añadir minutos reproducidos.\nhistorial_spotify <- historial_spotify |>\n     mutate(min_played = ms_played / 1000 / 60)\n# Crear columna de fecha (sin hora)\nhistorial_spotify <- historial_spotify |>\n     mutate(fecha = as_date(ts))\n```\n:::\n\n\n\n## Actividad semanal\n\nPara la primera gráfica, se muestra la actividad semanal, creando una columna denominada \"horas\" para alojar la información del contenido escuchado por semana. En @fig-act_semanal se puede observar que mi actividad más alta fue durante las semanas de los años 2022 y 2023 y que, por alguna razón, cuando comencé a utilizar Spotify en el 2014, al poco tiempo dejé de escuchar canciones hasta mediados de 2015.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Agrupar por semana y sumar horas reproducidas\nact_semanal <- historial_spotify |>\n     group_by(semana = floor_date(fecha, unit = \"week\")) |>\n     summarise(horas = sum(min_played) / 60, .groups = \"drop\")\n# Graficar\nact_semanal |>\n     ggplot(aes(x = semana, y = horas)) +\n     geom_col(aes(fill = horas), show.legend = FALSE) +\n     scale_fill_gradient(low = \"#98FB98\", high = \"#008B45\") +\n     scale_x_date(\n          date_breaks = \"1 year\",\n          date_labels = \"%Y\",\n          expand = expansion(mult = c(0, 0.01))\n     ) +\n     scale_y_continuous(labels = scales::label_comma()) +\n     labs(\n          title = \"¿En qué semana escuché más contenido en Spotify?\",\n          subtitle = \"Actividad por semana, 2014-2024\",\n          x = NULL,\n          y = \"Horas reproducidas\",\n          caption = \"Fuente: Elaboración propia con datos del historial extendido de Spotify (exportación desde spotify.com/account/privacy)\"\n     ) +\n     theme_classic(base_size = 15) +\n     theme(\n          legend.position = \"top\",\n          plot.caption = element_text(hjust = 0, face = \"italic\", size = 9)\n     )\n```\n\n::: {.cell-output-display}\n![Actividad semanal, 2014-2024](Spotify,-2014-2024_files/figure-html/fig-act_semanal-1.png){#fig-act_semanal fig-align='center' width=2400}\n:::\n:::\n\n\n\n## Actividad anual\n\nAhora bien, debido a que las columnas de la anterior gráfica (@fig-act_semanal) pudieran generar alguna incomodidad debido a su confusa visualización, se genera una gráfica de proporciones similares pero con la información agrupada por año.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#    Crear columna con los años.\nhistorial_spotify <- historial_spotify |>\n     mutate(anio = year(ts))\n# Agrupar por año y sumar las horas.\nact_anual <- historial_spotify |>\n     group_by(anio) |>\n     summarise(\n          horas = sum(min_played, na.rm = TRUE) / 60,\n          .groups = \"drop\"\n     )\n#    Graficar.\nact_anual |>\n     ggplot(aes(x = factor(anio), y = horas)) +\n     geom_col(aes(fill = horas), show.legend = FALSE) +\n     geom_text(\n          aes(label = round(horas, 0)),\n          vjust = -0.5,\n          size = 5\n     ) +\n     scale_fill_gradient(low = \"#98FB98\", high = \"#008B45\") +\n     scale_y_continuous(labels = scales::label_comma()) +\n     labs(\n          title = \"¿En qué año escuché más contenido en Spotify?\",\n          subtitle = \"Actividad total por año, 2014-2024\",\n          x = \"Año\",\n          y = \"Horas reproducidas\",\n          caption = \"Fuente: Elaboración propia con datos del historial extendido de Spotify (exportación desde spotify.com/account/privacy)\"\n     ) +\n     theme_classic(base_size = 15) +\n     theme(\n          legend.position = \"top\",\n          plot.caption = element_text(hjust = 0, face = \"italic\", size = 9)\n     ) +\n     coord_cartesian(ylim = c(0, max(act_anual$horas) * 1.1)) # Expande un poco el eje Y para que la etiqueta (541) se vea completa.\n```\n\n::: {.cell-output-display}\n![Actividad anual, 2014-2024](Spotify,-2014-2024_files/figure-html/fig-act_anual-1.png){#fig-act_anual fig-align='center' width=2400}\n:::\n:::\n\n\n\nEn esta gráfica (@fig-act_anual), se muestra un comportamiento diferente a lo esbozado anteriormente. Por ejemplo, si bien, en la @fig-act_semanal se muestra que en los años 2022-2023 hubo mayores picos de interacción con Spotify de forma semanal, en su perspectiva anual, el año 2023 no figura dentro de los cinco primeros años con mayor interacción, si no que es el año 2018 y después el 2022 junto con el 2016.\n\n## División de información\n\nDebido a la benevolencia de la información que brinda columnas para identificar canciones (álbum, track o artista) o podcasts (nombre del podcast o del episodio), se segmentará la información en dos diferentes objetos: songs (debido a que es más corto que escribir \"canciones\") y podcasts. Para la primera, se renombraron las variables para un mayor esclarecimiento de la información, como el nombre de la canción, el artista y el álbum. En tanto, para la segunda información (podcasts), se cambió la variable del nombre del podcasts.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#    Dividir entre canciones y podcasts.\n#    Canciones\nsongs <- historial_spotify |>\n     select(\n          timestamp = ts,\n          min_played,\n          track_name = master_metadata_track_name,\n          artist_name = master_metadata_album_artist_name,\n          album_name = master_metadata_album_album_name\n     ) |>\n     na.omit()\n#    Podcasts\npodcasts <- historial_spotify |>\n     select(\n          timestamp = ts,\n          min_played,\n          episode_name,\n          show_name = episode_show_name\n     ) |>\n     na.omit()\n```\n:::\n\n\n\n## Música\n\n### Top 25 artistas histórico\n\nUna vez filtrado la información de los datos históricos extrayendo la información de las canciones escuchadas durante el periodo (2014-2024), se genera una gráfica que muestra los 25 artistas más escuchados en mi historial completo de Spotify.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#    Top 25 artistas más escuchados en mi historial.\ntop25_artistas <- songs |>\n     group_by(artist_name) |>\n     summarise(minutos_escuchados = sum(min_played) * 60, .groups = \"drop\") |>\n     slice_max(order_by = minutos_escuchados, n = 25) |>\n     ggplot(aes(\n          x = reorder(artist_name, minutos_escuchados),\n          y = minutos_escuchados\n     )) +\n     geom_col(aes(fill = minutos_escuchados), show.legend = FALSE) +\n     scale_fill_gradient(low = \"#98FB98\", high = \"#008B45\") +\n     scale_y_continuous(labels = scales::label_number(scale = 1/1000, suffix = \"K\")) + \n     labs(\n          title = \"Top 25 artistas más escuchados en mi Spotify\",\n          subtitle = \"Basado en minutos totales reproducidos, 2014-2024\",\n          x = NULL,\n          y = \"Minutos reproducidos\",\n          caption = \"Fuente: Elaboración propia con datos del historial extendido de Spotify (exportación desde spotify.com/account/privacy)\"\n     ) +\n     theme_minimal(base_size = 16) +\n     theme(\n          axis.text.x = element_text(angle = 45, hjust = 1),\n          plot.caption = element_text(hjust = 0, face = \"italic\", size = 10)\n     ) +\n     coord_flip()\ntop25_artistas\n```\n\n::: {.cell-output-display}\n![Top 25 artistas más escuchados en mi historial](Spotify,-2014-2024_files/figure-html/fig-top25artistas-1.png){#fig-top25artistas fig-align='center' width=2400}\n:::\n:::\n\n\n\nEn esta gráfica (@fig-top25artistas) se puede observar que la música de The Weeknd es la que más he escuchado... y por mucho, casi llegando a los 600 mil minutos reproducidos, cerca de $\\approx$ 10 mil horas o alrededor de 415 días. En tanto, entre el rango de 200k-300k minutos reproducidos, se encuentran artistas como Edgar Oceransky, Bad Bunny, Bruno Mars, System of a Down y Blink 182. Asimismo, en el rango de 100k a 200k, hay artistas como Drake, Coldplay, Limp Bizkit y Ozuna, mientras que, debajo de los 100 mil minutos reproducidos, hay una diversidad de artistas como Post Malone, Adele, 50 Cent, Queen y Zoe. Curiosamente solo tres artistas de habla hispana y solo dos de México (Edgar Oceransky y Zoé).\n\n### Top 10 artistas por año\n\nUna cuestión que me surgió al estar realizando este tipo de visualizaciones, fue el conocer cómo han cambiado mis gustos musicales a lo largo de este periodo de alrededor de 10 años. Con ello en mente, se esboza el top 10 de artistas por cada año disponible en mi historial de Spotify.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#    Top 10 artistas por año.\ntop10_anual <- songs |>\n     mutate(anio = lubridate::year(timestamp)) |>\n     group_by(anio, artist_name) |>\n     summarise(minutos = sum(min_played) * 60, .groups = \"drop\") |>\n     group_by(anio) |>\n     slice_max(order_by = minutos, n = 10, with_ties = FALSE) |>\n     ungroup()\n\nggplot(top10_anual, aes(x = reorder_within(artist_name, minutos, anio), y = minutos)) +\n     geom_col(aes(fill = minutos), show.legend = FALSE) +\n     geom_text(\n          aes(label = scales::label_number(scale = 1/1000, suffix = \"K\", accuracy = 0.1)(minutos)),\n          hjust = -0.1,\n          size = 3.5\n     ) +\n     facet_wrap(~anio, scales = \"free_y\") +\n     scale_x_reordered() +\n     scale_y_continuous(labels = scales::label_number(scale = 1/1000, suffix = \"K\")) +\n     scale_fill_gradient(low = \"#98FB98\", high = \"#008B45\") +\n     labs(\n          title = \"Top 10 artistas más escuchados por año\",\n          subtitle = \"Basado en minutos totales reproducidos\",\n          x = NULL,\n          y = \"Minutos reproducidos\",\n          caption = \"Fuente: Elaboración propia con datos del historial extendido de Spotify (exportación desde spotify.com/account/privacy)\"\n     ) +\n     theme_minimal(base_size = 14) +\n     theme(\n          axis.text.x = element_blank(),\n          axis.ticks.x = element_blank(),\n          plot.caption = element_text(hjust = 0, face = \"italic\", size = 9)\n     ) +\n     coord_flip(clip = \"off\")\n```\n\n::: {.cell-output-display}\n![Top 10 artistas más escuchados por año](Spotify,-2014-2024_files/figure-html/fig-top10anos_m-1.png){#fig-top10anos_m fig-align='center' width=5400}\n:::\n:::\n\n\n\nDe esta forma, se observa que a través de los años, los artistas que más escucho han cambiado. Sin embargo, también hay artistas que han permanecido en el mismo periodo @fig-top10anos_m .\n\nDe la misma manera, también se puede dilucidar que la alta concentración de The Weeknd en @fig-top25artistas fue debido a que en los añlos 2018 y 2020, lo escuché con gran fervor. En 2018 desconozco la razón, pero en 2020 pudiera haber incidido el hecho del lanzamiento de su álbum \"After Hours\". Además, en 2021 se mantuvo como mi artista más escuchado a lo mejor por su medianamente interpretación en el Super Bowl LV de la NFL.\n\n## Podcasts\n\n### Top 25 podcasts histórico\n\nPor otra parte, también se pudo graficar los podcasts que más escuché durante estos años.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntop_podcasts_global <- podcasts |>\n     group_by(show_name) |>\n     summarise(minutos_reproducidos = sum(min_played) * 60, .groups = \"drop\") |>\n     slice_max(order_by = minutos_reproducidos, n = 25)\nggplot(top_podcasts_global, aes(\n     x = reorder(show_name, minutos_reproducidos),\n     y = minutos_reproducidos\n)) +\n     geom_col(aes(fill = minutos_reproducidos), show.legend = FALSE) +\n     geom_text(\n          aes(label = scales::label_number(scale = 1/1000, suffix = \"K\", accuracy = 1)(minutos_reproducidos)),\n          hjust = -0.1,\n          size = 3.5\n     ) +\n     scale_y_continuous(labels = scales::label_number(scale = 1/1000, suffix = \"K\")) +\n     scale_fill_gradient(low = \"#98FB98\", high = \"#008B45\") +\n     labs(\n          title = \"Top 25 podcasts más escuchados en Spotify\",\n          subtitle = \"Basado en minutos totales reproducidos, 2014-2024\",\n          x = NULL,\n          y = \"Minutos reproducidos\",\n          caption = \"Fuente: Elaboración propia con datos del historial extendido de Spotify (exportación desde spotify.com/account/privacy)\"\n     ) +\n     theme_minimal(base_size = 16) +\n     theme(\n          axis.text.x = element_text(angle = 45, hjust = 1),\n          plot.caption = element_text(hjust = 0, face = \"italic\", size = 10)\n     ) +\n     coord_flip(clip = \"off\")\n```\n\n::: {.cell-output-display}\n![Top 25 podcast más escuchados en mi historial](Spotify,-2014-2024_files/figure-html/fig-top25podcasts-1.png){#fig-top25podcasts fig-align='center' width=3600}\n:::\n:::\n\n\n\nComo se puede observar (@fig-top25podcasts), una forma de mantenerme informado es a través de la reproducción de podcasts informativos, mientras que mi formación académica como economista y financiero, hacen que se genere con mayor frecuencia, contenidos con esa temática. Uno de los podcasts que más escuché ha sido el de **Money Talks** (que ya ha sido cancelado), así como el segundo lugar **Peras y manzanas**, donde Valeria Moy aborda temas de coyuntura económica y financiera con un lenguaje sencillo.\n\nAsimismo, el deporte es algo de lo que me gusta estar al tanto, sobre todo de fútbol americano y Fórmula 1, esto a través del podcast de **Quique Garay** y **Fórmula Latina**. El primero, es un espacio (ya extinto) cuyo contenido es referente al fútbol y Olímpicos a través de historias curiosas e interesantes que son relatadas por Alberto Lati que lo hacen sumamente agradable al oído.\n\nPor otra parte, existen destellos de contenido humorístico como **Los Manríquez**, **Otro Rollo** o **Leyendas Legendarias**, sin embargo, en lo personal, la plataforma más adecuada para observar este tipo de contenido es a través de otras plataformas, como Youtube. Mientras que, para Otro Rollo, fue un maratón nostálgico que hizo aparecer este contenido entre los artistas más reproducidos.\n\n### Top 10 podcast por año\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntop10_podcasts_anual <- podcasts |>\n     mutate(anio = lubridate::year(timestamp)) |>\n     group_by(anio, show_name) |>\n     summarise(minutos = sum(min_played) * 60, .groups = \"drop\") |>\n     group_by(anio) |>\n     slice_max(order_by = minutos, n = 10, with_ties = FALSE) |>\n     ungroup()\nggplot(top10_podcasts_anual, aes(x = reorder_within(show_name, minutos, anio), y = minutos)) +\n     geom_col(aes(fill = minutos), show.legend = FALSE) +\n     geom_text(\n          aes(label = scales::label_number(scale = 1/1000, suffix = \"K\", accuracy = 1)(minutos)),\n          hjust = -0.1,\n          size = 3.5\n     ) +\n     facet_wrap(~anio, scales = \"free_y\") +\n     scale_x_reordered() +\n     scale_y_continuous(labels = scales::label_number(scale = 1/1000, suffix = \"K\")) +\n     scale_fill_gradient(low = \"#98FB98\", high = \"#008B45\") +\n     labs(\n          title = \"Top 10 podcasts más escuchados por año\",\n          subtitle = \"Basado en minutos totales reproducidos, 2014-2024\",\n          x = NULL,\n          y = \"Minutos reproducidos\",\n          caption = \"Fuente: Elaboración propia con datos del historial extendido de Spotify (exportación desde spotify.com/account/privacy)\"\n     ) +\n     theme_minimal(base_size = 14) +\n     theme(\n          axis.text.x = element_text(angle = 45, hjust = 1),\n          plot.caption = element_text(hjust = 0, face = \"italic\", size = 9)\n     ) +\n     coord_flip(clip = \"on\")\n```\n\n::: {.cell-output-display}\n![Top 10 podcasts por año](Spotify,-2014-2024_files/figure-html/fig-top10ano_p-1.png){#fig-top10ano_p fig-align='center' width=6000}\n:::\n:::\n\n\n\nEn un inicio @fig-top10ano_p, al haber poca diversidad de contenido económico o financiero, solamente escuchaba **Peras y manzanas** de Valeria Moy, sin embargo, conforme se fue diversificando y difundiendo más contenido, mi catálogo de podcasts fue variando de tema. No obstante, el contenido económico y/o financiero permaneció constante.\n\nAsimismo, estoy notando que dejé de escuchar podcasts que son muy interesantes, como **Econokafka** y **Escándalo Mexicano**.\n\n## Actividad por día y hora\n\n### Histórico\n\nOtra forma de observar la información es a través de una gráfica de calor donde se muestre el día y la hora en que más escuché contenido en Spotify (@fig-actividad_dh).\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nhistorial_spotify <- historial_spotify |>\n     mutate(\n          ts = lubridate::ymd_hms(ts, tz = \"UTC\"),\n          timestamp = ts  # crear columna nueva con nombre estándar si gustas\n     )\nhistorial_spotify <- historial_spotify |>\n     mutate(timestamp = lubridate::ymd_hms(timestamp, tz = \"UTC\"))\n\n\nactividad_total <- historial_spotify |>\n     mutate(\n          fecha = as_date(timestamp),\n          hora = hour(timestamp),\n          dia = wday(fecha, label = TRUE, abbr = FALSE)\n     ) |>\n     group_by(fecha, hora, dia) |>\n     summarise(min_escuchados = sum(min_played), .groups = \"drop\") |>\n     group_by(hora, dia) |>\n     summarise(min_totales = sum(min_escuchados), .groups = \"drop\")\n\nggplot(actividad_total, aes(dia, hora, fill = min_totales)) + \n     geom_tile(color = \"white\") +\n     scale_fill_gradient(\n          low = \"#00FF7F\",\n          high = \"#008B45\",\n          labels = scales::label_comma()\n     ) +\n     scale_y_continuous(trans = \"reverse\") + \n     labs(\n          title = \"¿Cuándo hubo mayor actividad en mi Spotify?\",\n          subtitle = \"Actividad por día y hora en todo el historial\",\n          x = NULL,\n          y = \"Hora (24h)\",\n          fill = \"Minutos reproducidos\",\n          caption = \"Fuente: Elaboración propia con datos del historial extendido de Spotify (exportación desde spotify.com/account/privacy)\"\n     ) + \n     coord_fixed(ratio = 0.3) +\n     theme_minimal(base_size = 15) +\n     theme(\n          plot.caption = element_text(hjust = 0, face = \"italic\", size = 9)\n     )\n```\n\n::: {.cell-output-display}\n![Actividad histórica por día y hora](Spotify,-2014-2024_files/figure-html/fig-actividad_dh-1.png){#fig-actividad_dh fig-align='center' width=3600}\n:::\n:::\n\n\n\n\n\nEn esta visualización (@fig-actividad_dh), se concluye que, de forma generalizada, mi actividad en Spotify es durante las tardes y cierta parte, en las madrugadas. Específicamente durante las madrugadas de los martes, jueves y sábados; así como las tardes de los domingos y miércoles con mayor frecuencia.\n\n### Música\n\nEn tanto, respecto al contenido musical reproducido por día y hora (@fig-actividad_musica), hay una mayor frecuencia durante algunas madrugadas, mediodías y tardes-noches.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nactividad_songs <- songs |>\n     mutate(\n          fecha = as_date(timestamp),\n          hora = hour(timestamp),\n          dia = wday(fecha, label = TRUE, abbr = FALSE)\n     ) |>\n     group_by(fecha, hora, dia) |>\n     summarise(min_escuchados = sum(min_played), .groups = \"drop\") |>\n     group_by(hora, dia) |>\n     summarise(min_totales = sum(min_escuchados), .groups = \"drop\")\n\nggplot(actividad_songs, aes(dia, hora, fill = min_totales)) + \n     geom_tile(color = \"white\") +\n     scale_fill_gradient(low = \"#98FB98\",\n                         high = \"#008B45\",\n                         labels = scales::label_comma()) +\n     scale_y_continuous(trans = \"reverse\") + \n     labs(\n          title = \"¿Cuándo escuché más música?\",\n          subtitle = \"Actividad musical por día y hora\",\n          x = NULL,\n          y = \"Hora (24h)\",\n          fill = \"Minutos reproducidos\",\n          caption = \"Fuente: Elaboración propia con datos del historial extendido de Spotify (exportación desde spotify.com/account/privacy)\"\n     ) + \n     coord_fixed(ratio = 0.3) +\n     theme_minimal(base_size = 15) +\n     theme(\n          plot.caption = element_text(hjust = 0, face = \"italic\", size = 9)\n     )\n```\n\n::: {.cell-output-display}\n![Actividad histórica por día y hora de música](Spotify,-2014-2024_files/figure-html/fig-actividad_musica-1.png){#fig-actividad_musica fig-align='center' width=3600}\n:::\n:::\n\n\n\n### Podcasts\n\nRespecto al contenido informativo o cómico (@fig-actividad_podcasts), la reproducción de este contenido se concentra más entre las tardes de 15h a 20h de martes a viernes. Y ligeramente algunas madrugadas de viernes y sábado.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nactividad_podcasts <- podcasts |>\n     mutate(\n          fecha = as_date(timestamp),\n          hora = hour(timestamp),\n          dia = wday(fecha, label = TRUE, abbr = FALSE)\n     ) |>\n     group_by(fecha, hora, dia) |>\n     summarise(min_escuchados = sum(min_played), .groups = \"drop\") |>\n     group_by(hora, dia) |>\n     summarise(min_totales = sum(min_escuchados), .groups = \"drop\")\n\nggplot(actividad_podcasts, aes(dia, hora, fill = min_totales)) + \n     geom_tile(color = \"white\") +\n     scale_fill_gradient(low = \"#98FB98\",\n                         high = \"#008B45\",\n                         labels = scales::label_comma()) +\n     scale_y_continuous(trans = \"reverse\") + \n     labs(\n          title = \"¿Cuándo escuché más podcasts?\",\n          subtitle = \"Actividad por día y hora en contenido hablado\",\n          x = NULL,\n          y = \"Hora (24h)\",\n          fill = \"Minutos reproducidos\",\n          caption = \"Fuente: Elaboración propia con datos del historial extendido de Spotify (exportación desde spotify.com/account/privacy)\"\n     ) + \n     coord_fixed(ratio = 0.3) +\n     theme_minimal(base_size = 15) +\n     theme(\n          plot.caption = element_text(hjust = 0, face = \"italic\", size = 9)\n     )\n```\n\n::: {.cell-output-display}\n![Actividad histórica por día y hora de podcasts](Spotify,-2014-2024_files/figure-html/fig-actividad_podcasts-1.png){#fig-actividad_podcasts fig-align='center' width=3600}\n:::\n:::\n\n\n\n## Conclusión\n\nExplorar mi historial extendido de Spotify ha sido más que un ejercicio técnico, fue una forma de redescubrir mis hábitos, gustos y momentos marcados por la música y los podcasts. A través de estas visualizaciones, no solo observé patrones o tendencias acerca de lo que escucho, también entendí cómo ha evolucionado mi consumo de contenido sonoro a lo largo del tiempo.\n\nLos datos no mienten: hay etapas más intensas, artistas que han sido compañía constante y otros que marcaron solo un instante. Incluso los horarios y días favoritos para escuchar revelan detalles que, sin los datos, pasarían desapercibidos.\n\nEsta experiencia demuestra el poder de visualizar información personal. Con unas cuantos renglones de código, es posible convertir miles de registros en historias visuales significativas.\n\nPd. Espero no alejarme en demasía de la visualización de datos y difusión de contenido económico y/o financiero.",
    "supporting": [
      "Spotify,-2014-2024_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}